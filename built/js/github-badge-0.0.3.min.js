var github_badge={version:"0.0.3",username:null,userinfo:null,avatar_url:null,name:null,repos:0,forks:0,stars:0,followers:0,build:function(a,d,b){github_badge.get_info(a,function(){d($(github_badge.render_template(github_badge)))},b)},get_info:function(a,d,b){github_badge.username=a;$.ajax("https://api.github.com/users/"+a,{dataType:"json",error:function(a,e){b(e)},success:function(a){github_badge.userinfo=a;github_badge.parse_info(a,d,b)}})},parse_info:function(a,d,b){var c=function(a,b){var c=parseInt(a,
10);return"NaN"===c.toString()?b||0:c};github_badge.name=a.name||"unknown";github_badge.avatar_url=a.avatar_url||null;github_badge.repos=c(a.public_repos,0);github_badge.followers=c(a.followers,0);$.ajax("https://api.github.com/users/"+github_badge.username+"/repos",{dataType:"json",error:function(a,c){b(c)},success:function(a){var c=a.length,b=0,h=0,l=0,m=0,k;if(c){for(b;b<c;b++)k=a[b],void 0===k.fork||k.fork||h++,k.stargazers_count&&(l+=k.stargazers_count),k.forks_count&&(m+=k.forks_count);github_badge.repos=
h;github_badge.stars=l;github_badge.forks=m;d()}}})},render_template:function(a){var d=1===a.forks?"":"s",b=1===a.stars?"":"s",c=1===a.repos?"repo":"repos",e="fork"+d,d="time"+d,f="star"+b,b="time"+b,g="follower"+(1===a.followers?"":"s"),h=function(a){return 1E3>a?a.toString():(a/1E3).toFixed(1)+"k"};return['<div id="github-badge">\n  <div id="github-badge-branding">\n    <a href="https://github.com" target="_blank">\n      <div class="github-badge-branding-label">github.com</div>\n    </a>\n  </div>\n  <div id="github-badge-main">\n    <div class="github-badge-header">',
'      <a href="https://github.com/'+a.username+'">','        <img class="github-badge-avatar" src="'+a.avatar_url+'">',"      </a>",'      <a href="https://github.com/'+a.username+'">','        <div class="github-badge-username"><strong>'+a.username+"</strong></div>","      </a>",'      <div class="github-badge-name">'+a.name+"</div>",'    </div>\n    <ul class="github-badge-info">\n      <li class="github-badge-info-left">','        <div class="github-badge-info-item" title="'+a.name+" has created "+
a.repos+" "+c+'.">','          <span class="github-badge-info-value">'+h(a.repos)+"</span>",'          <span class="github-badge-info-label">'+c+"</span>","        </div>",'        <div class="github-badge-info-item" title="'+a.name+" has been forked "+a.forks+" "+d+'.">','          <span class="github-badge-info-value">'+h(a.forks)+"</span>",'          <span class="github-badge-info-label">'+e+"</span>",'        </div>\n      </li>\n      <li class="github-badge-info-right">','        <div class="github-badge-info-item" title="'+
a.name+" has been starred "+a.stars+" "+b+'.">','          <span class="github-badge-info-value">'+h(a.stars)+"</span>",'          <span class="github-badge-info-label">'+f+"</span>","        </div>",'        <div class="github-badge-info-item" title="'+a.name+" has "+a.followers+" "+g+'.">','          <span class="github-badge-info-value">'+h(a.followers)+"</span>",'          <span class="github-badge-info-label">'+g+"</span>","      </li>\n    </ul>\n  </div>\n</div>"].join("\n")},replace_deviant:function(a,
d,b,c){var e=document.getElementsByTagName("github-badge"),e=e.length?e[0].shadowRoot:null;if(c||!e){$("github-badge").remove();"function"===typeof b&&b();var f=a instanceof jQuery?a:$(a);github_badge.build(d,function(a){f.append(a)},function(a){console.warn("Unable to build/replace github badge: "+a);f.remove()})}},url_info:function(a){var d,b,c,e,f={},g=document.createElement("a");b={url:window.location.href,unescape:!0,convert_num:!0};if("object"!==typeof a)a=b;else for(d in b)b.hasOwnProperty(d)&&
void 0===a[d]&&(a[d]=b[d]);g.href=a.url;d=g.search.substring(1).split("&");if(1<d[0].length)for(b=0;b<d.length;b+=1)c=d[b].split("="),a.unescape?(e=decodeURI(c[0]),c=decodeURI(c[1])):(e=c[0],c=c[1]),a.convert_num&&(c.match(/^\d+$/)?c=parseInt(c,10):c.match(/^\d+\.\d+$/)&&(c=parseFloat(c))),void 0===f[e]?f[e]=c:"string"===typeof f[e]?f[e]=[f[e],c]:f[e].push(c);return{protocol:g.protocol,hostname:g.hostname,host:g.host,port:g.port,hash:g.hash.substr(1),pathname:g.pathname,search:g.search,parameters:f}}};
